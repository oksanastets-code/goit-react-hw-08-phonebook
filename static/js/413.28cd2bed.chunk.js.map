{"version":3,"file":"static/js/413.28cd2bed.chunk.js","mappings":"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","sources":["components/Phonebook/Form.styled.js","redux/PhoneBook/phone-book-operations.js","redux/PhoneBook/phone-book-selectors.js","components/Phonebook/NameEditor.js","components/Phonebook/ContactList.styled.js","components/Phonebook/ContactList.js","components/Phonebook/Filter.js","components/Phonebook/PhoneBook.styled.js","views/UserView.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n`;\nexport const Label = styled.label`\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\nexport const InputField = styled.input`\n  margin-top: 10px;\n  padding: 15px;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n`;","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phone-book-actions';\n\n// axios.defaults.baseURL = 'https://6203af0f4d21c200170b9f5a.mockapi.io/api/v1/';\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact =\n  ({ name, number }) => dispatch => {\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => {\n        dispatch(addContactSuccess(data));\n      })\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getFoundedContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { addContact } from '../../redux/PhoneBook/phone-book-operations';\nimport PropTypes from 'prop-types';\nimport { Form, Label, InputField } from './Form.styled';\nimport { Button } from '../Button/Button.styled';\nimport { getContacts } from 'redux/PhoneBook/phone-book-selectors';\nexport default function NameEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleForm = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      const notify = `${name} is already on list`;\n      toast.error(notify);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"\">\n        Name\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"\"\n        />\n      </Label>\n      <Label htmlFor=\"\">\n        Number\n        <InputField\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nNameEditor.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const List = styled.ul`\n  width: 60%;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ContactData = styled.p``;\nexport const DeleteButton = styled.button``;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../redux/PhoneBook/phone-book-operations';\nimport { getFoundedContacts } from '../../redux/PhoneBook/phone-book-selectors';\nimport {\n  ContactItem,\n  List,\n  ContactData,\n  // DeleteButton,\n} from './ContactList.styled';\nimport { Button } from '../Button/Button.styled';\n\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(state => getFoundedContacts(state));\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  useEffect(() => {dispatch(fetchContacts()) }, [dispatch])\n  return (\n    // <ListWrapper>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactData>\n              {name}: {number}\n            </ContactData>\n            <Button onClick={() => onDeleteContact(id)}>\n              Delete\n            </Button>\n          </ContactItem>\n        ))}\n      </List>\n    // </ListWrapper>\n  )\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      nick: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/PhoneBook/phone-book-actions';\nimport { getFilter } from '../../redux/PhoneBook/phone-book-selectors';\nimport {  Form, Label, InputField } from './Form.styled';\n\nexport default function Filter () {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Form>\n    <Label htmlFor=\"\">\n      <InputField\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e)=>dispatch(changeFilter(e.currentTarget.value))}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter key word\"\n      />\n      </Label>\n      </Form>\n  )\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import styled from 'styled-components';\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport NameEditor from '../components/Phonebook/NameEditor';\nimport ContactList from '../components/Phonebook/ContactList';\nimport Filter from '../components/Phonebook/Filter';\nimport { Container } from '../components/Phonebook/PhoneBook.styled';\nimport { fetchContacts } from 'redux/PhoneBook/phone-book-operations';\n\nconst UserView = (params) => { \n    const dispatch = useDispatch();\n    useEffect(() => dispatch(fetchContacts()), [dispatch]);\n     return (\n        \n        <Container>\n          <Toaster />\n         {/* <h1>Phonebook</h1> */}\n\n          <NameEditor />\n         <h2 style={{\n           textAlign: 'center',\n         }}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n    \n    );\n\n}\nexport default UserView;"],"names":["Form","styled","Label","InputField","fetchContacts","dispatch","fetchContactsRequest","axios","then","data","fetchContactsSuccess","catch","error","fetchContactsError","getContacts","state","phonebook","contacts","getFilter","filter","NameEditor","useState","name","setName","number","setNumber","useSelector","useDispatch","handleForm","e","target","value","onSubmit","preventDefault","find","contact","toLocaleLowerCase","notify","toast","addContactRequest","addContactSuccess","addContactError","addContact","htmlFor","type","onChange","pattern","title","required","placeholder","ContactItem","List","ContactData","ContactList","normalizedFilter","toLowerCase","includes","getFoundedContacts","onDeleteContact","id","deleteContactRequest","deleteContactSuccess","deleteContactError","deleteContact","useEffect","map","onClick","Filter","changeFilter","currentTarget","Container","params","style","textAlign"],"sourceRoot":""}