{"version":3,"file":"static/js/41.2ce33cbd.chunk.js","mappings":"mQAgBaA,EAAgB,kBAAM,SAAAC,GACjCA,GAASC,EAAAA,EAAAA,OACTC,IAAAA,IACO,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,GAASK,EAAAA,EAAAA,IAAqBD,OACjDE,OAAM,SAAAC,GAAK,OAAIP,GAASQ,EAAAA,EAAAA,IAAmBD,S,mBCnBnCE,EAAOC,EAAAA,GAAAA,KAAH,mKAQJC,EAAQD,EAAAA,GAAAA,MAAH,2IAOLE,EAAaF,EAAAA,GAAAA,MAAH,+EAKVG,EAAYH,EAAAA,GAAAA,OAAH,iF,SChBP,SAASI,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMnB,GAAWoB,EAAAA,EAAAA,MAEXC,EAAa,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,SAWN,OACE,+BACE,UAACf,EAAD,CAAMgB,SATW,SAAAH,GACnBA,EAAEI,iBACF1B,EFFF,SAAC,GAAD,IAAGgB,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,OAAsB,SAAAlB,GACpB,IAAM2B,EAAU,CACdX,KAAMA,EACNE,OAAQA,GAGVlB,GAAS4B,EAAAA,EAAAA,OAET1B,IAAAA,KACQ,YAAayB,GAClBxB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPJ,GAAS6B,EAAAA,EAAAA,IAAkBzB,OAE5BE,OAAM,SAAAC,GAAK,OAAIP,GAAS8B,EAAAA,EAAAA,IAAgBvB,QEXlCwB,CAAW,CAAEf,KAAAA,EAAME,OAAAA,KAC5BD,EAAQ,IACRE,EAAU,KAKR,WACE,UAACR,EAAD,CAAOqB,QAAQ,GAAf,kBAEE,SAACpB,EAAD,CACEqB,KAAK,OACLjB,KAAK,OACLQ,MAAOR,EACPkB,SAAUb,EACVc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,SAGhB,UAAC3B,EAAD,CAAOqB,QAAQ,GAAf,oBAEE,SAACpB,EAAD,CACEqB,KAAK,MACLjB,KAAK,SACLQ,MAAON,EACPgB,SAAUb,EACVc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,SAGhB,SAACzB,EAAD,CAAWoB,KAAK,SAAhB,8BC7DD,I,cACMM,EAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,QCArCC,EAAcjC,EAAAA,GAAAA,IAAH,qEAIXkC,EAAclC,EAAAA,GAAAA,GAAH,8HAMXmC,EAAOnC,EAAAA,GAAAA,GAAH,mJAOJoC,EAAcpC,EAAAA,GAAAA,EAAH,sBACXqC,EAAerC,EAAAA,GAAAA,OAAH,sBCNV,SAASsC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAV,GAAK,OFZF,SAAAA,GAChC,IAAMS,EAHmB,SAAAT,GAAK,OAAIA,EAAMC,UAAUQ,SAGjCE,CAAYX,GAEvBY,EADSb,EAAUC,GACOa,cAChC,OAAOJ,EAASP,QAAO,SAAAf,GAAO,OAC5BA,EAAQX,KAAKqC,cAAcC,SAASF,MEOAG,CAAmBf,MACnDxC,GAAWoB,EAAAA,EAAAA,MAEXoC,EAAkB,SAAAC,GAAE,OAAIzD,ELwBH,SAAAyD,GAAE,OAAI,SAAAzD,GACjCA,GAAS0D,EAAAA,EAAAA,OACTxD,IAAAA,OAAA,oBACuBuD,IACpBtD,MAAK,kBAAMH,GAAS2D,EAAAA,EAAAA,IAAqBF,OACzCnD,OAAM,SAAAC,GAAK,OAAIP,GAAS4D,EAAAA,EAAAA,IAAmBrD,QK7BPsD,CAAcJ,KAErD,OADAK,EAAAA,EAAAA,YAAU,WAAO9D,EAASD,OAAoB,CAACC,KAE7C,SAAC2C,EAAD,WACE,SAACE,EAAD,UACGI,EAASc,KAAI,gBAAGN,EAAH,EAAGA,GAAIzC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,UAAC0B,EAAD,YACE,UAACE,EAAD,WACG9B,EADH,KACWE,MAEX,SAAC6B,EAAD,CAAciB,QAAS,kBAAMR,EAAgBC,IAA7C,sBAJgBA,UCtBrB,I,EAAMQ,EAAcvD,EAAAA,GAAAA,MAAH,gKAQXwD,EAAmBxD,EAAAA,GAAAA,MAAH,+ECHd,SAASyD,IACtB,IAAM3C,GAAQ0B,EAAAA,EAAAA,IAAYX,GACpBvC,GAAWoB,EAAAA,EAAAA,MACjB,OACE,UAAC6C,EAAD,CAAajC,QAAQ,GAArB,mCAEE,SAACkC,EAAD,CACEjC,KAAK,OACLjB,KAAK,SACLQ,MAAOA,EACPU,SAAU,SAACZ,GAAD,OAAKtB,GAASoE,EAAAA,EAAAA,IAAa9C,EAAE+C,cAAc7C,SACrDW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,sBCnBb,IAAMgC,EAAY5D,EAAAA,GAAAA,IAAH,oJC0BtB,EAlBiB,SAAC6D,GACd,IAAMvE,GAAWoB,EAAAA,EAAAA,MAEhB,OADD0C,EAAAA,EAAAA,YAAU,kBAAM9D,EAASD,OAAkB,CAACC,KAGxC,UAACsE,EAAD,YACE,SAAC,KAAD,KAGA,SAACxD,EAAD,KACA,sCACA,SAACqD,EAAD,KACA,SAACnB,EAAD","sources":["redux/PhoneBook/phone-book-operations.js","components/Phonebook/NameEditor.styled.js","components/Phonebook/NameEditor.js","redux/PhoneBook/phone-book-selectors.js","components/Phonebook/ContactList.styled.js","components/Phonebook/ContactList.js","components/Phonebook/Filter.styled.js","components/Phonebook/Filter.js","components/Phonebook/PhoneBook.styled.js","views/UserView.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phone-book-actions';\n\n// axios.defaults.baseURL = 'https://6203af0f4d21c200170b9f5a.mockapi.io/api/v1/';\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact =\n  ({ name, number }) => dispatch => {\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => {\n        dispatch(addContactSuccess(data));\n      })\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import styled from 'styled-components';\n// import theme from '../constants/theme'\nexport const Form = styled.form`\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  /* outline: 1px solid black; */\n  width: 400px;\n`;\nexport const Label = styled.label`\n  /* color: #212121; */\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\nexport const InputField = styled.input`\n  margin-top: 10px;\n  padding: 4px;\n  width: 150px;\n`;\nexport const AddButton = styled.button`\n  width: 100px;\n  border-radius: 4px;\n  padding: 4px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/PhoneBook/phone-book-operations';\nimport PropTypes from 'prop-types';\nimport { Form, Label, InputField, AddButton } from './NameEditor.styled';\n\nexport default function NameEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleForm = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"\">\n          Name\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleForm}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"\"\n          />\n        </Label>\n        <Label htmlFor=\"\">\n          Number\n          <InputField\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleForm}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"\"\n          />\n        </Label>\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </>\n  );\n}\n\nNameEditor.propTypes = {\n  onSubmit: PropTypes.func,\n};","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getFoundedContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from 'styled-components';\nexport const ListWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ContactItem = styled.li`\n  /* color: #212121; */\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\nexport const List = styled.ul`\n  // outline: 1px solid black;\n  width: 400px;\n  padding-left: 20px;\n  // padding-right: 20px;\n  margin-bottom: 20px;\n`;\nexport const ContactData = styled.p``;\nexport const DeleteButton = styled.button``;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../redux/PhoneBook/phone-book-operations';\nimport { getFoundedContacts } from '../../redux/PhoneBook/phone-book-selectors';\nimport {\n  ListWrapper,\n  ContactItem,\n  List,\n  ContactData,\n  DeleteButton,\n} from './ContactList.styled';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(state => getFoundedContacts(state));\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  useEffect(() => {dispatch(fetchContacts()) }, [dispatch])\n  return (\n    <ListWrapper>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactData>\n              {name}: {number}\n            </ContactData>\n            <DeleteButton onClick={() => onDeleteContact(id)}>\n              Delete\n            </DeleteButton>\n          </ContactItem>\n        ))}\n      </List>\n    </ListWrapper>\n  )\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      nick: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};","import styled from 'styled-components';\nexport const FilterLabel = styled.label`\n  /* color: #212121; */\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\nexport const FilterInputField = styled.input`\n  margin-top: 10px;\n  padding: 4px;\n  width: 150px;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/PhoneBook/phone-book-actions';\nimport { getFilter } from '../../redux/PhoneBook/phone-book-selectors';\n\nimport { FilterLabel, FilterInputField } from './Filter.styled';\nexport default function Filter () {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return  (\n    <FilterLabel htmlFor=\"\">\n      Find contacts by name\n      <FilterInputField\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e)=>dispatch(changeFilter(e.currentTarget.value))}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter key word\"\n      />\n    </FilterLabel>\n  )\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import styled from 'styled-components';\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  /* padding-left: 20px;\n  padding-right: 20px; */\n\n  /* width: 1200px; */\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport NameEditor from '../components/Phonebook/NameEditor';\nimport ContactList from '../components/Phonebook/ContactList';\nimport Filter from '../components/Phonebook/Filter';\nimport { Container } from '../components/Phonebook/PhoneBook.styled';\nimport { fetchContacts } from 'redux/PhoneBook/phone-book-operations';\n\nconst UserView = (params) => { \n    const dispatch = useDispatch();\n    useEffect(() => dispatch(fetchContacts()), [dispatch]);\n     return (\n        \n        <Container>\n          <Toaster />\n         {/* <h1>Phonebook</h1> */}\n\n          <NameEditor />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n    \n    );\n\n}\nexport default UserView;"],"names":["fetchContacts","dispatch","fetchContactsRequest","axios","then","data","fetchContactsSuccess","catch","error","fetchContactsError","Form","styled","Label","InputField","AddButton","NameEditor","useState","name","setName","number","setNumber","useDispatch","handleForm","e","target","value","onSubmit","preventDefault","contact","addContactRequest","addContactSuccess","addContactError","addContact","htmlFor","type","onChange","pattern","title","required","placeholder","getFilter","state","phonebook","filter","ListWrapper","ContactItem","List","ContactData","DeleteButton","ContactList","contacts","useSelector","getContacts","normalizedFilter","toLowerCase","includes","getFoundedContacts","onDeleteContact","id","deleteContactRequest","deleteContactSuccess","deleteContactError","deleteContact","useEffect","map","onClick","FilterLabel","FilterInputField","Filter","changeFilter","currentTarget","Container","params"],"sourceRoot":""}